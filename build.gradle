plugins {
  id "com.github.ben-manes.versions" version "0.38.0"
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

apply plugin:'java'
apply plugin: 'maven'
apply plugin:'application'

group = 'com.github.calimero'
version = '2.5-M1'

sourceCompatibility = 11
targetCompatibility = 11

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

mainClassName = 'tuwien.auto.calimero.tools.Main'

run {
	// for passing program arguments, use -Dexec.args="..."
	args System.getProperty("exec.args", "").split() 
	standardInput = System.in
}

task execute(type: JavaExec) {
	if (project.hasProperty("mainClass"))
		main = mainClass
	classpath = sourceSets.main.runtimeClasspath
	args(System.getProperty("exec.args", "").split())
}

compileJava.options*.compilerArgs = [
	'-Xlint:all',
	'-Xlint:-try',
	'-Xlint:-options',
]

compileTestJava.options*.compilerArgs = [
	'-Xlint:all',
	'-Xlint:-try',
]

sourceSets {
	main {
		java.srcDirs = [ 'src' ]
		resources.srcDir 'resources'
	}
	test {
		java.srcDirs = [ 'test' ]
	}
}

dependencies {
	implementation "com.github.calimero:calimero-core:${version}"
	runtimeOnly "com.github.calimero:calimero-rxtx:${version}"
	implementation 'org.slf4j:slf4j-api:1.7.30'
	runtimeOnly 'org.slf4j:slf4j-simple:1.7.30'
	implementation 'net.lingala.zip4j:zip4j:2.7.0'
}

jar {
	manifest {
		attributes(
			'Main-Class': mainClassName,
			'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' ')
		)
	}
}
