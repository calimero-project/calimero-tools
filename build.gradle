plugins {
  id "com.github.ben-manes.versions" version "0.42.0"
  id 'maven-publish'
  id 'signing'
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

apply plugin:'java-library'
apply plugin:'application'

group = 'com.github.calimero'
version = '2.6-SNAPSHOT'

sourceCompatibility = 19
targetCompatibility = 19

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'


mainClassName = System.getProperty("mainClass") ?: 'tuwien.auto.calimero.tools.Main'

run {
	// for passing program arguments, use -Dexec.args="..."
	args System.getProperty("exec.args", "").split() 
	standardInput = System.in
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaExec) { jvmArgs += "--enable-preview" }

tasks.withType(Jar) {
	from("${projectDir}") {
        include 'LICENSE.txt'
        into "META-INF"
    }
    if (name.equals('sourcesJar')) {
    	from("${projectDir}") {
		    include 'README.md'
        }
    }
}

compileJava.options*.compilerArgs = [
	'-Xlint:all',
	'-Xlint:-try',
	'--enable-preview',
]

compileTestJava.options*.compilerArgs = [
	'-Xlint:all',
	'-Xlint:-try',
	'--enable-preview',
]

sourceSets {
	main {
		java.srcDirs = [ 'src' ]
		resources.srcDir 'resources'
	}
	test {
		java.srcDirs = [ 'test' ]
	}
}

tasks.withType(Javadoc) {
    options.addStringOption("Xdoclint:-missing", '-quiet')
    options.addBooleanOption('-enable-preview', true)
	options.addStringOption("-release", "${targetCompatibility}")
}

dependencies {
	api "com.github.calimero:calimero-core-loom:${version}"
	runtimeOnly "com.github.calimero:calimero-rxtx:${version}"
	implementation 'org.slf4j:slf4j-api:1.7.36'
	runtimeOnly 'org.slf4j:slf4j-simple:1.7.36'
	implementation 'net.lingala.zip4j:zip4j:2.11.2'
}

jar {
	manifest {
		attributes(
			'Main-Class': mainClassName,
			'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' ')
		)
	}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name
            from components.java
            pom {
                name = 'Calimero Tools (Loom)'
                description = 'A collection of tools for KNX network communication'
                url = 'https://github.com/calimero-project/calimero-tools'
                inceptionYear = '2006'
                licenses {
                    license {
                        name = "GNU General Public License, version 2, with the Classpath Exception"
                        url = 'LICENSE.txt'
                    }
                }
                developers {
                    developer {
                        name = "Boris Malinowsky"
                        email = "b.malinowsky@gmail.com"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:calimero-project/calimero-tools.git'
                    url = 'https://github.com/calimero-project/calimero-tools.git'
                }
            }
        }
    }
    repositories {
        maven {
            name 'maven'
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(PasswordCredentials)
        }
    }
}

signing {
    if (project.hasProperty("signing.keyId")) {
        sign publishing.publications.mavenJava
    }
}
